---
import Layout from './Layout.astro';
import Navigation from '../components/Navigation.vue';
import Footer from '../components/Footer.vue';

export interface Props {
  frontmatter: {
    title: string;
    description?: string;
    author?: string;
    date?: string;
    tags?: string[];
    image?: string;
  };
}

const { frontmatter } = Astro.props;
const formattedDate = frontmatter.date ? new Date(frontmatter.date).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
}) : null;
---

<Layout title={frontmatter.title} description={frontmatter.description}>
  <Navigation client:load />
  
  <main class="pt-24">
    <article class="py-16">
      <div class="container-custom">
        {frontmatter.image && (
          <div class="mb-8 rounded-xl overflow-hidden max-h-96">
            <img src={frontmatter.image} alt={frontmatter.title} class="w-2xs h-full object-cover" />
          </div>
        )}
        
        <header class="mb-8 pb-8 border-b border-gray-200">
          <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">{frontmatter.title}</h1>
          
          {frontmatter.description && (
            <p class="text-xl text-gray-600 mb-4">{frontmatter.description}</p>
          )}
          {frontmatter.advisor && (
            <p>
              <span class="text-xl text-black-600 mb-4"></span>
              <span class="text-xl text-gray-600 mb-4">{frontmatter.advisor}</span>
            </p>
          )}

          {frontmatter.email && (
            <p>
              <span class="text-xl text-black-600 mb-4">Email: </span>
              <span class="text-xl text-gray-600 mb-4">{frontmatter.email}</span>
            </p>
          )}

          {frontmatter.office && (
            <p>
              <span class="text-xl text-black-600 mb-4">Office: </span>
              <span class="text-xl text-gray-600 mb-4">{frontmatter.office}</span>
            </p>
          )}
          
          <div class="flex flex-wrap items-center gap-4 text-sm text-gray-500">
            {frontmatter.author && (
              <div class="flex items-center gap-2">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                </svg>
                <span>{frontmatter.author}</span>
              </div>
            )}
            
            {formattedDate && (
              <div class="flex items-center gap-2">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                </svg>
                <span>{formattedDate}</span>
              </div>
            )}
          </div>
          
          {frontmatter.tags && frontmatter.tags.length > 0 && (
            <div class="flex flex-wrap gap-2 mt-4">
              {frontmatter.tags.map((tag) => (
                <span class="px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm">
                  #{tag}
                </span>
              ))}
            </div>
          )}
        </header>
        
        <div class="prose prose-lg max-w-none markdown-content">
          <slot />
        </div>
      </div>
    </article>
  </main>
  
  <Footer />
</Layout>

<style>
  .markdown-content :global(h1) {
    font-family: 'Orbitron', monospace !important;
    font-size: 2.5rem;
    font-weight: 700;
    margin-top: 2rem;
    margin-bottom: 1rem;
    color: #111827;
    text-transform: uppercase;
    letter-spacing: 1.5px;
  }
  
  .markdown-content :global(h2) {
    font-family: 'Orbitron', monospace !important;
    font-size: 2rem;
    font-weight: 600;
    margin-top: 2rem;
    margin-bottom: 1rem;
    color: #111827;
    text-transform: uppercase;
    letter-spacing: 1px;
  }
  
  .markdown-content :global(h3) {
    font-family: 'Orbitron', monospace !important;
    font-size: 1.5rem;
    font-weight: 600;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
    color: #111827;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  .markdown-content :global(p) {
    font-family: 'Roboto', sans-serif !important;
    margin-bottom: 1.25rem;
    line-height: 1.75;
    color: #374151;
  }
  
  .markdown-content :global(ul),
  .markdown-content :global(ol) {
    font-family: 'Roboto', sans-serif !important;
    margin-bottom: 1.25rem;
    padding-left: 1.5rem;
  }
  
  .markdown-content :global(li) {
    font-family: 'Roboto', sans-serif !important;
    margin-bottom: 0.5rem;
    color: #374151;
  }
  
  .markdown-content :global(blockquote) {
    border-left: 4px solid #2563eb;
    padding-left: 1rem;
    margin: 1.5rem 0;
    font-style: italic;
    color: #4b5563;
  }
  
  .markdown-content :global(code) {
    background-color: #f3f4f6;
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-size: 0.875rem;
    color: #1f2937;
  }
  
  .markdown-content :global(pre) {
    background-color: #1f2937;
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin-bottom: 1.25rem;
  }
  
  .markdown-content :global(pre code) {
    background-color: transparent;
    color: #f3f4f6;
    padding: 0;
  }
  
  .markdown-content :global(a) {
    color: #2563eb;
    text-decoration: underline;
  }
  
  .markdown-content :global(a:hover) {
    color: #1d4ed8;
  }
  
  .markdown-content :global(img) {
    max-width: 100%;
    height: auto;
    border-radius: 0.5rem;
    margin: 1.5rem 0;
  }
  
  .markdown-content :global(table) {
    width: 100%;
    border-collapse: collapse;
    margin: 1.5rem 0;
  }
  
  .markdown-content :global(th),
  .markdown-content :global(td) {
    border: 1px solid #e5e7eb;
    padding: 0.75rem;
    text-align: left;
  }
  
  .markdown-content :global(th) {
    background-color: #f9fafb;
    font-weight: 600;
  }
</style>